from vk_maria import types

from chat.filters.register import RegisterFilter
from chat.filters.check import CheckFilter
from chat.fms.admin_selector import cmd_start
from chat.fms.input_buy_sum import *
from chat.fms.input_qiwi import *
from chat.fms.input_sell_sum import *
from chat.user.bonus import bonus
from chat.user.buy import buy
from chat.user.menu import menu
from chat.user.profile import profile
from chat.user.ref_system import ref_system
from chat.user.sell import sell
from chat.user.start import start_bot
from chat.user.stats import stats
from config.states import lp
from functions.timer import timer, vkcoin_handler
from utils.qiwi.check_bill import check_bill
from utils.users_top import get_users_top


@lp.message_handler(
    CheckFilter({"menu": "back"}, ["–º–µ–Ω—é", "–Ω–∞—á–∞—Ç—å", "start"]), RegisterFilter()
)
def menu_handler(event: types.Message):
    menu(event.message.peer_id)


@lp.message_handler(CheckFilter({"menu": "sell"}, "–ø—Ä–æ–¥–∞—Ç—å"), RegisterFilter())
def coins_sell_handler(event: types.Message):
    sell(event.message.peer_id)


@lp.message_handler(CheckFilter({"menu": "buy"}, "–∫—É–ø–∏—Ç—å"), RegisterFilter())
def coins_buy_handler(event: types.Message):
    buy(event.message.peer_id)


@lp.message_handler(CheckFilter({"menu": "bonus"}, "–±–æ–Ω—É—Å"), RegisterFilter())
def bonus_hanlder(event: types.Message):
    bonus(event.message.peer_id)


@lp.message_handler(
    CheckFilter({"menu": "ref_sys"}, ["–ø–∞—Ä—Ç–Ω–µ—Ä–∫–∞", "—Ä–µ—Ñ", "—Ä–µ—Ñ–µ—Ä–∞–ª–∫–∞"]),
    RegisterFilter(),
)
def ref_hanlder(event: types.Message):
    ref_system(event.message.peer_id)


@lp.message_handler(CheckFilter({"menu": "profile"}, "–ø—Ä–æ—Ñ–∏–ª—å"), RegisterFilter())
def profile_hanlder(event: types.Message):
    profile(event.message.peer_id)


@lp.message_handler(CheckFilter({"profile": "stats"}, "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), RegisterFilter())
def stats_hanlder(event: types.Message):
    stats(event.message.peer_id)


@lp.message_handler(CheckFilter({"bill": "check"}, "—á–µ–∫–±–∏–ª"), RegisterFilter())
def stats_hanlder(event: types.Message):
    check_bill(event.message.peer_id)


@lp.message_handler(
    CheckFilter({"stats": "top_buyers"}, "—Ç–æ–ø –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π"), RegisterFilter()
)
def top_hanlder(event: types.Message):
    top = get_users_top(event.message.peer_id, 1)
    event.reply("üëë10 –≥–ª–∞–≤–Ω—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ –∑–∞ –Ω–µ–¥–µ–ª—é:\n\n" + top)


@lp.message_handler(
    CheckFilter({"stats": "top_sellers"}, "—Ç–æ–ø –ø—Ä–æ–¥–∞–≤—Ü–æ–≤"), RegisterFilter()
)
def top_hanlder(event: types.Message):
    top = get_users_top(event.message.peer_id, 2)
    event.reply("üëë10 –≥–ª–∞–≤–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –±–æ—Ç–∞ –∑–∞ –Ω–µ–¥–µ–ª—é:\n\n" + top)


@lp.message_handler(CheckFilter({"push": "on"}, "+—É–≤–µ–¥—ã"), RegisterFilter())
def stats_hanlder(event: types.Message):
    user = User.get_data(event.message.peer_id)
    user.push = True
    user.save()
    event.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö")
    ref_system(event.message.peer_id)


@lp.message_handler(CheckFilter({"push": "off"}, "-—É–≤–µ–¥—ã"), RegisterFilter())
def stats_hanlder(event: types.Message):
    user = User.get_data(event.message.peer_id)
    user.push = False
    user.save()
    event.reply("–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö")
    ref_system(event.message.peer_id)


@lp.message_handler()
def other_functions(event: types.Message):
    if "?" in event.message.text:
        cmd_start(event)
    else:
        start_bot(event)


print("bot was started")
try:
    vkcoin_handler()
    timer()
    lp.polling()
except Exception as e:
    print(e)
